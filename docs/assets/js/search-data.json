{"0": {
    "doc": "Contributing",
    "title": "Contributing",
    "content": ". NOTE: this document has been adapted from the excellent Contributing guide of the UofTCoders’ rcourse. The gds_env is an open-source project, aimed to provide a containerised platform for Geographic Data Science. ",
    "url": "https://darribas.org/gds_env/contributing/",
    "relUrl": "/contributing/"
  },"1": {
    "doc": "Contributing",
    "title": "Feedback",
    "content": "If you use the gds_env, we’d love to hear from you! . Here are a few pointers to effectively get in touch: . | If you find rough edges, you can open a new issue on the tracker | If you would like to propose new libraries or extension, these are logged and compiled on issues with the “Stack changes” label. Check out the latest one and feel free to join the conversation | If you use the gds_env, we would love to hear about the context (education, research, industry) and how it goes. This is very rewarding in itself, but it also helps us map how the project is adopted and used, so don’t be shy to reach out! | . ",
    "url": "https://darribas.org/gds_env/contributing/#feedback",
    "relUrl": "/contributing/#feedback"
  },"2": {
    "doc": "Contributing",
    "title": "How to Contribute",
    "content": "Anyone can contribute to the course repository via pull requests. We use GitHub flow to manage changes: . | Create a fork of this repository, and clone it to your local computer. | In your local copy of this repository, create a new branch. | Commit your changes to that branch. | Push the edits on that branch to your fork on GitHub. | Submit a pull request to the main repository (darribas/gds_env). | If you receive feedback on your pull request, make further commits to the new branch on your fork. These will automatically be added to your pull request. | . You may wish to look at How to Contribute to an Open Source Project on GitHub for more detailed instructions. The GitHub Glossary is also a useful resource that explains Git-related terminology. ",
    "url": "https://darribas.org/gds_env/contributing/#how-to-contribute",
    "relUrl": "/contributing/#how-to-contribute"
  },"3": {
    "doc": "Docker - Build",
    "title": "Build Docker containers",
    "content": ". IMPORTANT This is a guide for building Docker containers, not for downloading or using existing ones. If you are an end-user, you probably prefer to install containers. ",
    "url": "https://darribas.org/gds_env/guides/docker_build/#build-docker-containers",
    "relUrl": "/guides/docker_build/#build-docker-containers"
  },"4": {
    "doc": "Docker - Build",
    "title": "Requirements",
    "content": "To build one of the gds_env flavours from source, you need to access the Docker image can be built by running: . ",
    "url": "https://darribas.org/gds_env/guides/docker_build/#requirements",
    "relUrl": "/guides/docker_build/#requirements"
  },"5": {
    "doc": "Docker - Build",
    "title": "Build process",
    "content": "Make sure to point your terminal of choice to the folder where you have placed the Dockerfile to build: . cd /path/to/folder/with/Dockerfile . Then, run the following command: . docker build -t &lt;image-name&gt; . where &lt;image-name&gt; can be replaced by the name you want to give to the image you will create. Mind this process may take a long time. Particularly for gds, several of the R libraries need to be compiled from source and this takes time and CPU cycles. Once it finishes, you can check it has been built correctly by: . docker image ls . And you should see one image with the image-name you have selected. ",
    "url": "https://darribas.org/gds_env/guides/docker_build/#build-process",
    "relUrl": "/guides/docker_build/#build-process"
  },"6": {
    "doc": "Docker - Build",
    "title": "Docker - Build",
    "content": " ",
    "url": "https://darribas.org/gds_env/guides/docker_build/",
    "relUrl": "/guides/docker_build/"
  },"7": {
    "doc": "Docker - Install",
    "title": "Install on Docker",
    "content": " ",
    "url": "https://darribas.org/gds_env/guides/docker_install/#install-on-docker",
    "relUrl": "/guides/docker_install/#install-on-docker"
  },"8": {
    "doc": "Docker - Install",
    "title": "Installing Docker",
    "content": "To install and run any of the gds_env flavours on your computer through Docker, all you need is Docker installed. Please note not every platform (most notably older or non-Pro versions of Windows) meet the requirements to run the Docker app. If your computer cannot run Docker easily, consider running gds_env through VirtualBox. Here are a few useful links to install Docker: . | Official documentation from Docker to install on Windows 10 Pro/Student, Mac, and Ubuntu Linux | General Docker guide by the Geographic Data Science Lab. | . ",
    "url": "https://darribas.org/gds_env/guides/docker_install/#installing-docker",
    "relUrl": "/guides/docker_install/#installing-docker"
  },"9": {
    "doc": "Docker - Install",
    "title": "Installing gds_env",
    "content": "Please check in the description of each flavour for the exact command. Generally speaking, if you have Docker installed and running on your computer, you can install gds_env by typing: . docker pull darribas/&lt;gds-flavour&gt;:4.1 . where &lt;gds-flavour&gt; is one of gds_py, gds, gds_dev. ",
    "url": "https://darribas.org/gds_env/guides/docker_install/#installing-gds_env",
    "relUrl": "/guides/docker_install/#installing-gds_env"
  },"10": {
    "doc": "Docker - Install",
    "title": "Running gds_env",
    "content": "Once installed, you can run a container by typing: . docker run --rm -ti -p 8888:8888 -v ${PWD}:/home/jovyan/work darribas/&lt;gds-flavour&gt;:4.1 . A couple of notes on the command above: . | This opens the 8888 port of the container so you can access JupyterLab from your browser. To access the Lab instance, you will have to point your browser to localhost:8888 and insert the token printed on the terminal | The command also mounts the current folder from where you run it (${PWD}) to the container. This means that you can see the files in that folder from JupyterLab by opening the work folder in its file browser. You can replace ${PWD} with the path to any folder on your local machine. For example, to mount the Desktop folder on a Mac, you can replace ${PWD} by /Users/&lt;username&gt;/Desktop. | . ",
    "url": "https://darribas.org/gds_env/guides/docker_install/#running-gds_env",
    "relUrl": "/guides/docker_install/#running-gds_env"
  },"11": {
    "doc": "Docker - Install",
    "title": "Docker - Install",
    "content": " ",
    "url": "https://darribas.org/gds_env/guides/docker_install/",
    "relUrl": "/guides/docker_install/"
  },"12": {
    "doc": "gds",
    "title": "Python + R: gds",
    "content": "The gds flavour contains a full gds_py stack, as well as an entire R stack. This includes the following: . | An R stack composed of a list of libraries designed to closely mirror that provided by the excellent rocker/geospatial project. | An R kernel for Jupyter Lab/Notebook, provided by the IRkernel project. | An interface to R from Python Jupyter notebooks, provided by rpy2 project. | . ",
    "url": "https://darribas.org/gds_env/stacks/gds/#python--r-gds",
    "relUrl": "/stacks/gds/#python--r-gds"
  },"13": {
    "doc": "gds",
    "title": "R Libraries",
    "content": "A full list of Python libraries installed in the gds_py environment is available below: . `gds` R library list (click to expand) GDS version: latest Executing the command: Rscript -e ip &lt;- as.data.frame(installed.packages()[,c(1,3:4)]); print(ip) Package Version Priority abind abind 1.4-5 &lt;NA&gt; acepack acepack 1.4.1 &lt;NA&gt; arm arm 1.11-1 &lt;NA&gt; arrow arrow 0.17.1 &lt;NA&gt; askpass askpass 1.1 &lt;NA&gt; assertthat assertthat 0.2.1 &lt;NA&gt; backports backports 1.1.8 &lt;NA&gt; base64enc base64enc 0.1-3 &lt;NA&gt; BH BH 1.72.0-3 &lt;NA&gt; BiocManager BiocManager 1.30.10 &lt;NA&gt; BiocVersion BiocVersion 3.11.1 &lt;NA&gt; bit bit 1.1-15.2 &lt;NA&gt; bit64 bit64 0.9-7.1 &lt;NA&gt; bitops bitops 1.0-6 &lt;NA&gt; blob blob 1.2.1 &lt;NA&gt; bookdown bookdown 0.20 &lt;NA&gt; brew brew 1.0-6 &lt;NA&gt; broom broom 0.7.0 &lt;NA&gt; callr callr 3.4.3 &lt;NA&gt; cartogram cartogram 0.2.0 &lt;NA&gt; cellranger cellranger 1.1.0 &lt;NA&gt; checkmate checkmate 2.0.0 &lt;NA&gt; classInt classInt 0.4-3 &lt;NA&gt; cli cli 2.0.2 &lt;NA&gt; clipr clipr 0.7.0 &lt;NA&gt; coda coda 0.19-3 &lt;NA&gt; colorspace colorspace 1.4-1 &lt;NA&gt; colourvalues colourvalues 0.3.5 &lt;NA&gt; commonmark commonmark 1.7 &lt;NA&gt; covr covr 3.5.0 &lt;NA&gt; crayon crayon 1.3.4 &lt;NA&gt; credentials credentials 1.3.0 &lt;NA&gt; crosstalk crosstalk 1.1.0.1 &lt;NA&gt; crul crul 0.9.0 &lt;NA&gt; curl curl 4.3 &lt;NA&gt; data.table data.table 1.12.8 &lt;NA&gt; DBI DBI 1.1.0 &lt;NA&gt; dbplyr dbplyr 1.4.4 &lt;NA&gt; deldir deldir 0.1-28 &lt;NA&gt; desc desc 1.2.0 &lt;NA&gt; devtools devtools 2.3.0 &lt;NA&gt; dichromat dichromat 2.0-0 &lt;NA&gt; digest digest 0.6.25 &lt;NA&gt; dplyr dplyr 1.0.0 &lt;NA&gt; DT DT 0.14 &lt;NA&gt; dtplyr dtplyr 1.0.1 &lt;NA&gt; e1071 e1071 1.7-3 &lt;NA&gt; ellipsis ellipsis 0.3.1 &lt;NA&gt; evaluate evaluate 0.14 &lt;NA&gt; expm expm 0.999-5 &lt;NA&gt; fansi fansi 0.4.1 &lt;NA&gt; farver farver 2.0.3 &lt;NA&gt; fastmap fastmap 1.0.1 &lt;NA&gt; feather feather 0.3.5 &lt;NA&gt; FNN FNN 1.1.3 &lt;NA&gt; forcats forcats 0.5.0 &lt;NA&gt; foreach foreach 1.5.0 &lt;NA&gt; Formula Formula 1.2-3 &lt;NA&gt; fs fs 1.4.2 &lt;NA&gt; fst fst 0.9.2 &lt;NA&gt; future future 1.18.0 &lt;NA&gt; gdalUtils gdalUtils 2.0.3.2 &lt;NA&gt; gdata gdata 2.18.0 &lt;NA&gt; gdtools gdtools 0.2.2 &lt;NA&gt; generics generics 0.0.2 &lt;NA&gt; geocompkg geocompkg 0.0.102 &lt;NA&gt; geojson geojson 0.3.4 &lt;NA&gt; geojsonio geojsonio 0.9.2 &lt;NA&gt; geojsonlint geojsonlint 0.4.0 &lt;NA&gt; geojsonsf geojsonsf 2.0.0 &lt;NA&gt; geometry geometry 0.4.5 &lt;NA&gt; geoR geoR 1.8-1 &lt;NA&gt; geosphere geosphere 1.5-10 &lt;NA&gt; gepaf gepaf 0.1.1 &lt;NA&gt; gert gert 0.3 &lt;NA&gt; ggmap ggmap 3.0.0 &lt;NA&gt; ggplot2 ggplot2 3.3.2 &lt;NA&gt; gh gh 1.1.0 &lt;NA&gt; GISTools GISTools 0.7-4 &lt;NA&gt; git2r git2r 0.27.1 &lt;NA&gt; globals globals 0.12.5 &lt;NA&gt; glue glue 1.4.1 &lt;NA&gt; gmodels gmodels 2.18.1 &lt;NA&gt; goftest goftest 1.2-2 &lt;NA&gt; googlePolylines googlePolylines 0.7.2 &lt;NA&gt; gridExtra gridExtra 2.3 &lt;NA&gt; gstat gstat 2.0-6 &lt;NA&gt; gtable gtable 0.3.0 &lt;NA&gt; gtools gtools 3.8.2 &lt;NA&gt; haven haven 2.3.1 &lt;NA&gt; hdf5r hdf5r 1.3.2 &lt;NA&gt; hexbin hexbin 1.28.1 &lt;NA&gt; highr highr 0.8 &lt;NA&gt; historydata historydata 0.1 &lt;NA&gt; Hmisc Hmisc 4.4-0 &lt;NA&gt; hms hms 0.5.3 &lt;NA&gt; htmlTable htmlTable 2.0.1 &lt;NA&gt; htmltools htmltools 0.5.0 &lt;NA&gt; htmlwidgets htmlwidgets 1.5.1 &lt;NA&gt; httpcode httpcode 0.3.0 &lt;NA&gt; httpuv httpuv 1.5.4 &lt;NA&gt; httr httr 1.4.2 &lt;NA&gt; igraph igraph 1.2.5 &lt;NA&gt; ini ini 0.3.1 &lt;NA&gt; intervals intervals 0.15.2 &lt;NA&gt; IRdisplay IRdisplay 0.7.0 &lt;NA&gt; IRkernel IRkernel 1.1.1 &lt;NA&gt; isoband isoband 0.2.2 &lt;NA&gt; iterators iterators 1.0.12 &lt;NA&gt; jpeg jpeg 0.1-8.1 &lt;NA&gt; jqr jqr 1.1.0 &lt;NA&gt; jsonify jsonify 1.2.1 &lt;NA&gt; jsonlite jsonlite 1.7.0 &lt;NA&gt; jsonvalidate jsonvalidate 1.1.0 &lt;NA&gt; kableExtra kableExtra 1.1.0 &lt;NA&gt; knitr knitr 1.29 &lt;NA&gt; labeling labeling 0.3 &lt;NA&gt; later later 1.1.0.1 &lt;NA&gt; latticeExtra latticeExtra 0.6-29 &lt;NA&gt; lazyeval lazyeval 0.2.2 &lt;NA&gt; leafem leafem 0.1.1 &lt;NA&gt; leaflet leaflet 2.0.3 &lt;NA&gt; leaflet.providers leaflet.providers 1.9.0 &lt;NA&gt; leafpop leafpop 0.0.5 &lt;NA&gt; leafsync leafsync 0.1.0 &lt;NA&gt; LearnBayes LearnBayes 2.15.1 &lt;NA&gt; lidR lidR 3.0.2 &lt;NA&gt; lifecycle lifecycle 0.2.0 &lt;NA&gt; linprog linprog 0.9-2 &lt;NA&gt; listenv listenv 0.8.0 &lt;NA&gt; lme4 lme4 1.1-23 &lt;NA&gt; lpSolve lpSolve 5.6.15 &lt;NA&gt; lubridate lubridate 1.7.9 &lt;NA&gt; lwgeom lwgeom 0.2-5 &lt;NA&gt; magic magic 1.5-9 &lt;NA&gt; magrittr magrittr 1.5 &lt;NA&gt; manipulateWidget manipulateWidget 0.10.1 &lt;NA&gt; mapdata mapdata 2.3.0 &lt;NA&gt; mapdeck mapdeck 0.3.3 &lt;NA&gt; maps maps 3.3.0 &lt;NA&gt; maptools maptools 1.0-1 &lt;NA&gt; mapview mapview 2.7.8 &lt;NA&gt; markdown markdown 1.1 &lt;NA&gt; memoise memoise 1.1.0 &lt;NA&gt; mime mime 0.9 &lt;NA&gt; miniUI miniUI 0.1.1.1 &lt;NA&gt; minqa minqa 1.2.4 &lt;NA&gt; modelr modelr 0.1.8 &lt;NA&gt; munsell munsell 0.5.0 &lt;NA&gt; nabor nabor 0.5.0 &lt;NA&gt; ncdf4 ncdf4 1.17 &lt;NA&gt; ncmeta ncmeta 0.2.5 &lt;NA&gt; nlme nlme 3.1-148 recommended nloptr nloptr 1.2.2.2 &lt;NA&gt; openssl openssl 1.4.2 &lt;NA&gt; osmdata osmdata 0.1.3 &lt;NA&gt; osrm osrm 3.3.3 &lt;NA&gt; packcircles packcircles 0.3.3 &lt;NA&gt; pbdZMQ pbdZMQ 0.3-3 &lt;NA&gt; pillar pillar 1.4.6 &lt;NA&gt; pkgbuild pkgbuild 1.1.0 &lt;NA&gt; pkgconfig pkgconfig 2.0.3 &lt;NA&gt; pkgload pkgload 1.1.0 &lt;NA&gt; plogr plogr 0.2.0 &lt;NA&gt; plyr plyr 1.8.6 &lt;NA&gt; png png 0.1-7 &lt;NA&gt; polyclip polyclip 1.10-0 &lt;NA&gt; praise praise 1.0.0 &lt;NA&gt; prettyunits prettyunits 1.1.1 &lt;NA&gt; processx processx 3.4.3 &lt;NA&gt; progress progress 1.2.2 &lt;NA&gt; proj4 proj4 1.0-10 &lt;NA&gt; promises promises 1.1.1 &lt;NA&gt; protolite protolite 2.1 &lt;NA&gt; ps ps 1.3.3 &lt;NA&gt; purrr purrr 0.3.4 &lt;NA&gt; R.methodsS3 R.methodsS3 1.8.0 &lt;NA&gt; R.oo R.oo 1.23.0 &lt;NA&gt; R.utils R.utils 2.9.2 &lt;NA&gt; R6 R6 2.4.1 &lt;NA&gt; RandomFields RandomFields 3.3.8 &lt;NA&gt; RandomFieldsUtils RandomFieldsUtils 0.5.3 &lt;NA&gt; randomForest randomForest 4.6-14 &lt;NA&gt; rapidjsonr rapidjsonr 1.2.0 &lt;NA&gt; raster raster 3.3-13 &lt;NA&gt; rasterVis rasterVis 0.48 &lt;NA&gt; rcartocolor rcartocolor 2.0.0 &lt;NA&gt; rcmdcheck rcmdcheck 1.3.3 &lt;NA&gt; RColorBrewer RColorBrewer 1.1-2 &lt;NA&gt; Rcpp Rcpp 1.0.5 &lt;NA&gt; RcppArmadillo RcppArmadillo 0.9.900.2.0 &lt;NA&gt; RcppEigen RcppEigen 0.3.3.7.0 &lt;NA&gt; RcppProgress RcppProgress 0.4.2 &lt;NA&gt; RCSF RCSF 1.0.2 &lt;NA&gt; RCurl RCurl 1.98-1.2 &lt;NA&gt; readr readr 1.3.1 &lt;NA&gt; readxl readxl 1.3.1 &lt;NA&gt; rematch rematch 1.0.1 &lt;NA&gt; rematch2 rematch2 2.1.2 &lt;NA&gt; remotes remotes 2.2.0 &lt;NA&gt; repr repr 1.1.0 &lt;NA&gt; reprex reprex 0.3.0 &lt;NA&gt; revgeo revgeo 0.15 &lt;NA&gt; rex rex 1.2.0 &lt;NA&gt; rgdal rgdal 1.5-12 &lt;NA&gt; rgeos rgeos 0.5-3 &lt;NA&gt; rgl rgl 0.100.54 &lt;NA&gt; RgoogleMaps RgoogleMaps 1.4.5.3 &lt;NA&gt; rgrass7 rgrass7 0.2-1 &lt;NA&gt; rhdf5 rhdf5 2.32.2 &lt;NA&gt; Rhdf5lib Rhdf5lib 1.10.1 &lt;NA&gt; rjson rjson 0.2.20 &lt;NA&gt; RJSONIO RJSONIO 1.3-1.4 &lt;NA&gt; rlang rlang 0.4.7 &lt;NA&gt; rlas rlas 1.3.6 &lt;NA&gt; rmapshaper rmapshaper 0.4.4 &lt;NA&gt; RMariaDB RMariaDB 1.0.9 &lt;NA&gt; rmarkdown rmarkdown 2.3 &lt;NA&gt; rnaturalearth rnaturalearth 0.1.0 &lt;NA&gt; rnaturalearthdata rnaturalearthdata 0.1.0 &lt;NA&gt; RNetCDF RNetCDF 2.3-1 &lt;NA&gt; roxygen2 roxygen2 7.1.1 &lt;NA&gt; rpostgis rpostgis 1.4.3 &lt;NA&gt; RPostgres RPostgres 1.2.0 &lt;NA&gt; RPostgreSQL RPostgreSQL 0.6-2 &lt;NA&gt; rprojroot rprojroot 1.3-2 &lt;NA&gt; RSQLite RSQLite 2.2.0 &lt;NA&gt; rstudioapi rstudioapi 0.11 &lt;NA&gt; rversions rversions 2.0.2 &lt;NA&gt; rvest rvest 0.3.5 &lt;NA&gt; satellite satellite 1.0.2 &lt;NA&gt; scales scales 1.1.1 &lt;NA&gt; selectr selectr 0.4-2 &lt;NA&gt; sessioninfo sessioninfo 1.1.1 &lt;NA&gt; sf sf 0.9-5 &lt;NA&gt; sfheaders sfheaders 0.2.2 &lt;NA&gt; shiny shiny 1.5.0 &lt;NA&gt; sourcetools sourcetools 0.1.7 &lt;NA&gt; sp sp 1.4-2 &lt;NA&gt; spacetime spacetime 1.2-3 &lt;NA&gt; spatialreg spatialreg 1.1-5 &lt;NA&gt; spatialwidget spatialwidget 0.2.2 &lt;NA&gt; spatstat spatstat 1.64-1 &lt;NA&gt; spatstat.data spatstat.data 1.4-3 &lt;NA&gt; spatstat.utils spatstat.utils 1.17-0 &lt;NA&gt; spData spData 0.3.8 &lt;NA&gt; spDataLarge spDataLarge 0.5.0 &lt;NA&gt; spdep spdep 1.1-5 &lt;NA&gt; splancs splancs 2.01-40 &lt;NA&gt; stars stars 0.4-3 &lt;NA&gt; statmod statmod 1.4.34 &lt;NA&gt; stplanr stplanr 0.6.2 &lt;NA&gt; stringi stringi 1.4.6 &lt;NA&gt; stringr stringr 1.4.0 &lt;NA&gt; svglite svglite 1.2.3.2 &lt;NA&gt; sys sys 3.3 &lt;NA&gt; systemfonts systemfonts 0.2.3 &lt;NA&gt; tensor tensor 1.5 &lt;NA&gt; testthat testthat 2.3.2 &lt;NA&gt; tibble tibble 3.0.3 &lt;NA&gt; tidync tidync 0.2.4 &lt;NA&gt; tidyr tidyr 1.1.0 &lt;NA&gt; tidyselect tidyselect 1.1.0 &lt;NA&gt; tidyverse tidyverse 1.3.0 &lt;NA&gt; tinytex tinytex 0.24 &lt;NA&gt; tmap tmap 3.1 &lt;NA&gt; tmaptools tmaptools 3.1 &lt;NA&gt; TraMineR TraMineR 2.2-0.1 &lt;NA&gt; triebeard triebeard 0.3.0 &lt;NA&gt; tufte tufte 0.6 &lt;NA&gt; units units 0.6-7 &lt;NA&gt; urltools urltools 1.7.3 &lt;NA&gt; usethis usethis 1.6.1 &lt;NA&gt; utf8 utf8 1.1.4 &lt;NA&gt; uuid uuid 0.1-4 &lt;NA&gt; V8 V8 3.2.0 &lt;NA&gt; vctrs vctrs 0.3.2 &lt;NA&gt; viridis viridis 0.5.1 &lt;NA&gt; viridisLite viridisLite 0.3.0 &lt;NA&gt; vroom vroom 1.2.1 &lt;NA&gt; webshot webshot 0.5.2 &lt;NA&gt; whisker whisker 0.4 &lt;NA&gt; widgetframe widgetframe 0.3.1 &lt;NA&gt; withr withr 2.2.0 &lt;NA&gt; xfun xfun 0.15 &lt;NA&gt; XML XML 3.99-0.4 &lt;NA&gt; xml2 xml2 1.3.2 &lt;NA&gt; xopen xopen 1.0.0 &lt;NA&gt; xtable xtable 1.8-4 &lt;NA&gt; xts xts 0.12-0 &lt;NA&gt; yaml yaml 2.2.1 &lt;NA&gt; zoo zoo 1.8-8 &lt;NA&gt; base base 4.0.2 base boot boot 1.3-25 recommended class class 7.3-17 recommended cluster cluster 2.1.0 recommended codetools codetools 0.2-16 recommended compiler compiler 4.0.2 base datasets datasets 4.0.2 base foreign foreign 0.8-79 recommended graphics graphics 4.0.2 base grDevices grDevices 4.0.2 base grid grid 4.0.2 base KernSmooth KernSmooth 2.23-17 recommended lattice lattice 0.20-41 recommended MASS MASS 7.3-51.6 recommended Matrix Matrix 1.2-18 recommended methods methods 4.0.2 base mgcv mgcv 1.8-31 recommended nlme.1 nlme 3.1-147 recommended nnet nnet 7.3-14 recommended parallel parallel 4.0.2 base rpart rpart 4.1-15 recommended spatial spatial 7.3-11 recommended splines splines 4.0.2 base stats stats 4.0.2 base stats4 stats4 4.0.2 base survival survival 3.1-12 recommended tcltk tcltk 4.0.2 base tools tools 4.0.2 base utils utils 4.0.2 base . ",
    "url": "https://darribas.org/gds_env/stacks/gds/#r-libraries",
    "relUrl": "/stacks/gds/#r-libraries"
  },"14": {
    "doc": "gds",
    "title": "Install",
    "content": "The Docker image can be downloaded with the following command: . docker pull darribas/gds:4.1 . ",
    "url": "https://darribas.org/gds_env/stacks/gds/#install",
    "relUrl": "/stacks/gds/#install"
  },"15": {
    "doc": "gds",
    "title": "gds",
    "content": " ",
    "url": "https://darribas.org/gds_env/stacks/gds/",
    "relUrl": "/stacks/gds/"
  },"16": {
    "doc": "gds_dev",
    "title": "Python + R + dev tools: gds_dev",
    "content": " ",
    "url": "https://darribas.org/gds_env/stacks/gds_dev/#python--r--dev-tools-gds_dev",
    "relUrl": "/stacks/gds_dev/#python--r--dev-tools-gds_dev"
  },"17": {
    "doc": "gds_dev",
    "title": "Contents",
    "content": "The gds_dev flavour contains a full gds stack, plus a few development tools geared towards open source computing. Broadly speaking, these include: . | decktape, for building high-quality PDF files from HTML slides. | jekyll, for building static websites. | tippecanoe, to create vector tilesets. | A full-fledge install of the Vim editor. | . ",
    "url": "https://darribas.org/gds_env/stacks/gds_dev/#contents",
    "relUrl": "/stacks/gds_dev/#contents"
  },"18": {
    "doc": "gds_dev",
    "title": "Install",
    "content": "The Docker image can be downloaded with the following command: . docker pull darribas/gds_dev:4.1 . ",
    "url": "https://darribas.org/gds_env/stacks/gds_dev/#install",
    "relUrl": "/stacks/gds_dev/#install"
  },"19": {
    "doc": "gds_dev",
    "title": "gds_dev",
    "content": " ",
    "url": "https://darribas.org/gds_env/stacks/gds_dev/",
    "relUrl": "/stacks/gds_dev/"
  },"20": {
    "doc": "gds_py",
    "title": "Python: gds_py",
    "content": "The core of the gds_env is gds_py: a container providing a fully working Jupyter Lab installation, additionally loaded with a comprehensive list of geospatial python packages. To build gds_py, we start with the minimal-notebook image of the Jupyter official Docker images. This means gds_py comes with the following preinstalled and available to the user: . | Jupyter (Lab/Notebook/Hub) | LaTeX distribution (allowing to export notebooks into pdf, for example) | pandoc for document conversion | . For more information on the components of minimal-notebook, please check the Jupyter Docker Stacks documentation. On top of minima-notebook, we add a comprehensive list of geospatial pacakges in Python. For a full list, see the table below. ",
    "url": "https://darribas.org/gds_env/stacks/gds_py/#python-gds_py",
    "relUrl": "/stacks/gds_py/#python-gds_py"
  },"21": {
    "doc": "gds_py",
    "title": "Native conda version",
    "content": "From gds_py, an environment file is automatically created for the stack built using conda. This is then tested on Windows/macOS/Linux: . | Platform | Status | . | Linux/macOS | | . | Windows | | . ",
    "url": "https://darribas.org/gds_env/stacks/gds_py/#native-conda-version",
    "relUrl": "/stacks/gds_py/#native-conda-version"
  },"22": {
    "doc": "gds_py",
    "title": "Python Libraries",
    "content": "A full list of Python libraries installed in the gds_py environment is available below: . `gds_py` Python library list (click to expand) GDS version: latest Executing the command: conda list # packages in environment at /opt/conda: # # Name Version Build Channel _libgcc_mutex 0.1 conda_forge conda-forge _openmp_mutex 4.5 1_llvm conda-forge abseil-cpp 20200225.2 he1b5a44_0 conda-forge affine 2.3.0 py_0 conda-forge alabaster 0.7.12 pypi_0 pypi alembic 1.4.2 pyh9f0ad1d_0 conda-forge appdirs 1.4.4 pypi_0 pypi arrow-cpp 0.17.1 py37h1234567_11_cpu conda-forge async_generator 1.10 py_0 conda-forge attrs 19.3.0 py_0 conda-forge aws-sdk-cpp 1.7.164 hc831370_1 conda-forge babel 2.8.0 pypi_0 pypi backcall 0.2.0 pyh9f0ad1d_0 conda-forge beautifulsoup4 4.9.1 py37hc8dfbb8_0 conda-forge black 19.10b0 pypi_0 pypi bleach 3.1.5 pyh9f0ad1d_0 conda-forge blinker 1.4 py_1 conda-forge blosc 1.19.0 he1b5a44_0 conda-forge bokeh 2.1.1 py37hc8dfbb8_0 conda-forge boost-cpp 1.72.0 h8e57a91_0 conda-forge boto3 1.14.24 pyh9f0ad1d_0 conda-forge botocore 1.17.24 pyh9f0ad1d_0 conda-forge branca 0.3.1 py_0 conda-forge brotli 1.0.7 he1b5a44_1004 conda-forge brotlipy 0.7.0 py37h8f50634_1000 conda-forge brunsli 0.1 he1b5a44_0 conda-forge bs4 4.9.1 0 conda-forge bzip2 1.0.8 h516909a_2 conda-forge c-ares 1.15.0 h516909a_1001 conda-forge ca-certificates 2020.6.20 hecda079_0 conda-forge cairo 1.16.0 hcf35c78_1003 conda-forge cenpy 1.0.0.post4 py_0 conda-forge certifi 2020.6.20 py37hc8dfbb8_0 conda-forge certipy 0.1.3 py_0 conda-forge cffi 1.14.0 py37hd463f26_0 conda-forge cfitsio 3.470 h3eac812_5 conda-forge chardet 3.0.4 py37hc8dfbb8_1006 conda-forge charls 2.1.0 he1b5a44_2 conda-forge click 7.1.2 pyh9f0ad1d_0 conda-forge click-plugins 1.1.1 py_0 conda-forge cligj 0.5.0 py_0 conda-forge cloudpickle 1.5.0 py_0 conda-forge colorama 0.4.3 py_0 conda-forge colorcet 2.0.2 py_0 pyviz conda 4.8.2 py37_0 conda-forge conda-package-handling 1.6.0 py37h8f50634_2 conda-forge configurable-http-proxy 4.2.1 node13_he01fd0c_0 conda-forge contextily 1.0.0 py_0 conda-forge coverage 5.2 pypi_0 pypi cryptography 2.9.2 py37hb09aad4_0 conda-forge curl 7.71.1 he644dc0_3 conda-forge cycler 0.10.0 py_2 conda-forge cykhash 1.0.2 py37h3340039_1 conda-forge cython 0.29.21 py37h3340039_0 conda-forge cytoolz 0.10.1 py37h516909a_0 conda-forge dask 2.21.0 py_0 conda-forge dask-core 2.21.0 py_0 conda-forge dask-glm 0.2.0 py_1 conda-forge dask-ml 1.5.0 py_0 conda-forge datashader 0.11.0 py_0 pyviz datashape 0.5.4 py_1 conda-forge decorator 4.4.2 py_0 conda-forge defusedxml 0.6.0 py_0 conda-forge descartes 1.1.0 py_4 conda-forge dill 0.3.2 pyh9f0ad1d_0 conda-forge distributed 2.21.0 py37hc8dfbb8_0 conda-forge docutils 0.15.2 py37_0 conda-forge entrypoints 0.3 py37hc8dfbb8_1001 conda-forge esda 2.3.1 py_0 conda-forge expat 2.2.9 he1b5a44_2 conda-forge fastcache 1.1.0 py37h8f50634_1 conda-forge feather-format 0.4.1 pyh9f0ad1d_0 conda-forge fiona 1.8.13 py37h0492a4a_1 conda-forge folium 0.11.0 py_0 conda-forge fontconfig 2.13.1 h86ecdb6_1001 conda-forge freetype 2.10.2 he06d7ca_0 conda-forge freexl 1.0.5 h516909a_1002 conda-forge fsspec 0.7.4 py_0 conda-forge fuzzywuzzy 0.17.0 py_0 conda-forge gdal 3.0.4 py37h4b180d9_10 conda-forge geographiclib 1.50 py_0 conda-forge geopandas 0.8.1 py_0 conda-forge geopy 2.0.0 pyh9f0ad1d_0 conda-forge geos 3.8.1 he1b5a44_0 conda-forge geotiff 1.6.0 h05acad5_0 conda-forge gettext 0.19.8.1 hc5be6a0_1002 conda-forge gflags 2.2.2 he1b5a44_1004 conda-forge giddy 2.3.3 py_0 conda-forge giflib 5.2.1 h516909a_2 conda-forge gitdb 4.0.5 py_0 conda-forge gitdb2 4.0.2 py_0 conda-forge gitpython 3.1.3 py_0 conda-forge glib 2.65.0 h6f030ca_0 conda-forge glog 0.4.0 h49b9bf7_3 conda-forge gmp 6.2.0 he1b5a44_2 conda-forge gmpy2 2.1.0b1 py37h04dde30_0 conda-forge grpc-cpp 1.30.1 h9ea6770_0 conda-forge h3-py 3.6.4 py37h3340039_0 conda-forge hdbscan 0.8.26 py37h03ebfcd_1 conda-forge hdf4 4.2.13 hf30be14_1003 conda-forge hdf5 1.10.6 nompi_h3c11f04_100 conda-forge heapdict 1.0.1 py_0 conda-forge icu 64.2 he1b5a44_1 conda-forge idna 2.10 pyh9f0ad1d_0 conda-forge imagecodecs 2020.5.30 py37hda6ee5b_2 conda-forge imageio 2.9.0 py_0 conda-forge imagesize 1.2.0 pypi_0 pypi importlib-metadata 1.7.0 py37hc8dfbb8_0 conda-forge importlib_metadata 1.7.0 0 conda-forge inequality 1.0.0 py_0 conda-forge ipykernel 5.3.3 py37h43977f1_0 conda-forge ipyleaflet 0.13.1 pyh9f0ad1d_0 conda-forge ipympl 0.5.7 pyh9f0ad1d_1 conda-forge ipyparallel 6.3.0 py37hc8dfbb8_0 conda-forge ipython 7.16.1 py37h43977f1_0 conda-forge ipython_genutils 0.2.0 py_1 conda-forge ipywidgets 7.5.1 py_0 conda-forge jedi 0.17.2 py37hc8dfbb8_0 conda-forge jinja2 2.11.2 pyh9f0ad1d_0 conda-forge jmespath 0.10.0 pyh9f0ad1d_0 conda-forge joblib 0.16.0 py_0 conda-forge jpeg 9d h516909a_0 conda-forge json-c 0.13.1 hbfbb72e_1002 conda-forge json5 0.9.4 pyh9f0ad1d_0 conda-forge jsonschema 3.2.0 py37hc8dfbb8_1 conda-forge jupyter-book 0.7.1 pypi_0 pypi jupyter-cache 0.2.2 pypi_0 pypi jupyter-sphinx 0.2.4 pypi_0 pypi jupyter_client 6.1.6 py_0 conda-forge jupyter_core 4.6.3 py37hc8dfbb8_1 conda-forge jupyter_server 0.2.1 py37hc8dfbb8_1 conda-forge jupyter_telemetry 0.0.5 py_0 conda-forge jupyterhub 1.1.0 py37_2 conda-forge jupyterhub-base 1.1.0 py37_2 conda-forge jupyterlab 2.1.3 py_0 conda-forge jupyterlab_server 1.2.0 py_0 conda-forge jupytext 1.5.1 pyh9f0ad1d_0 conda-forge jxrlib 1.1 h516909a_2 conda-forge kealib 1.4.13 h33137a7_1 conda-forge kiwisolver 1.2.0 py37h99015e2_0 conda-forge krb5 1.17.1 hfafb76e_1 conda-forge latexcodec 2.0.1 pypi_0 pypi lcms2 2.11 hbd6801e_0 conda-forge ld_impl_linux-64 2.34 h53a641e_7 conda-forge lerc 2.2 he1b5a44_0 conda-forge libaec 1.0.4 he1b5a44_1 conda-forge libblas 3.8.0 17_openblas conda-forge libcblas 3.8.0 17_openblas conda-forge libcurl 7.71.1 hcdd3856_3 conda-forge libdap4 3.20.6 h1d1bd15_1 conda-forge libedit 3.1.20191231 h46ee950_1 conda-forge libevent 2.1.10 hcdb4288_1 conda-forge libffi 3.2.1 he1b5a44_1007 conda-forge libgcc-ng 9.2.0 h24d8f2e_2 conda-forge libgdal 3.0.4 he6a97d6_10 conda-forge libgfortran-ng 7.5.0 hdf63c60_6 conda-forge libgomp 9.2.0 h24d8f2e_2 conda-forge libiconv 1.15 h516909a_1006 conda-forge libkml 1.3.0 hb574062_1011 conda-forge liblapack 3.8.0 17_openblas conda-forge libllvm8 8.0.1 hc9558a2_0 conda-forge libnetcdf 4.7.4 nompi_h84807e1_104 conda-forge libopenblas 0.3.10 pthreads_hb3c22a3_3 conda-forge libpng 1.6.37 hed695b0_1 conda-forge libpq 12.3 h5513abc_0 conda-forge libprotobuf 3.12.3 h8b12597_2 conda-forge libpysal 4.3.0 py_0 conda-forge libsass 0.20.0 pypi_0 pypi libsodium 1.0.17 h516909a_0 conda-forge libspatialindex 1.9.3 he1b5a44_3 conda-forge libspatialite 4.3.0a h2482549_1038 conda-forge libssh2 1.9.0 hab1572f_4 conda-forge libstdcxx-ng 9.2.0 hdf63c60_2 conda-forge libtiff 4.1.0 hc7e4089_6 conda-forge libuuid 2.32.1 h14c3975_1000 conda-forge libuv 1.34.0 h516909a_0 conda-forge libwebp-base 1.1.0 h516909a_3 conda-forge libxcb 1.13 h14c3975_1002 conda-forge libxml2 2.9.10 hee79883_0 conda-forge libzopfli 1.0.3 he1b5a44_0 conda-forge llvm-openmp 10.0.0 hc9558a2_0 conda-forge llvmlite 0.31.0 py37h5202443_1 conda-forge locket 0.2.0 py_2 conda-forge lz4-c 1.9.2 he1b5a44_1 conda-forge lzo 2.10 h14c3975_1000 conda-forge mako 1.1.0 py_0 conda-forge mapclassify 2.3.0 py_0 conda-forge markdown-it-py 0.4.8 pypi_0 pypi markupsafe 1.1.1 py37h8f50634_1 conda-forge matplotlib-base 3.3.0 py37hbe0a388_0 conda-forge mercantile 1.1.5 pyh9f0ad1d_0 conda-forge mgwr 2.1.1 py_0 conda-forge mistune 0.8.4 py37h8f50634_1001 conda-forge mkl 2019.5 281 conda-forge mkl-service 2.3.0 py37h516909a_0 conda-forge mock 4.0.2 py37hc8dfbb8_0 conda-forge momepy 0.2.1 py_0 conda-forge more-itertools 8.4.0 pypi_0 pypi mpc 1.1.0 h04dde30_1007 conda-forge mpfr 4.0.2 he80fd80_1 conda-forge mpmath 1.1.0 py_0 conda-forge msgpack-python 1.0.0 py37h99015e2_1 conda-forge multipledispatch 0.6.0 py_0 conda-forge munch 2.5.0 py_0 conda-forge myst-nb 0.8.4 pypi_0 pypi myst-parser 0.9.1 pypi_0 pypi nbclient 0.4.1 pypi_0 pypi nbconvert 5.6.1 py37hc8dfbb8_1 conda-forge nbdime 2.0.0 py_1 conda-forge nbformat 5.0.7 py_0 conda-forge ncurses 6.2 he1b5a44_1 conda-forge nest-asyncio 1.4.0 pypi_0 pypi networkx 2.4 py_1 conda-forge nodejs 13.13.0 hf5d1a2b_0 conda-forge nose 1.3.7 py37hc8dfbb8_1004 conda-forge notebook 6.0.3 py37hc8dfbb8_0 conda-forge numba 0.48.0 py37hb3f55d8_0 conda-forge numexpr 2.7.1 py37h0da4684_1 conda-forge numpy 1.19.0 py37h8960a57_0 conda-forge oauthlib 3.0.1 py_0 conda-forge olefile 0.46 py_0 conda-forge openjpeg 2.3.1 h981e76c_3 conda-forge openssl 1.1.1g h516909a_0 conda-forge oset 0.1.3 pypi_0 pypi osmnet 0.1.6 py_0 conda-forge osmnx 0.15.1 pyh9f0ad1d_0 conda-forge packaging 20.4 pyh9f0ad1d_0 conda-forge palettable 3.3.0 py_0 conda-forge pamela 1.0.0 py_0 conda-forge pandana 0.4.4 py37hb3f55d8_1 conda-forge pandas 1.0.5 py37h0da4684_0 conda-forge pandoc 2.10 h14c3975_0 conda-forge pandocfilters 1.4.2 py_1 conda-forge param 1.9.3 py_0 pyviz parquet-cpp 1.5.1 2 conda-forge parso 0.7.0 pyh9f0ad1d_0 conda-forge partd 1.1.0 py_0 conda-forge pathspec 0.8.0 pyh9f0ad1d_0 conda-forge patsy 0.5.1 py_0 conda-forge pcre 8.44 he1b5a44_0 conda-forge pexpect 4.8.0 py37hc8dfbb8_1 conda-forge pickleshare 0.7.5 py37hc8dfbb8_1001 conda-forge pillow 7.2.0 py37h718be6c_1 conda-forge pip 20.1.1 py_1 conda-forge pixman 0.38.0 h516909a_1003 conda-forge pluggy 0.13.1 pypi_0 pypi pointpats 2.1.0 py_1 conda-forge polyline 1.4.0 py_0 conda-forge poppler 0.87.0 h4190859_1 conda-forge poppler-data 0.4.9 1 conda-forge postgresql 12.3 h8573dbc_0 conda-forge proj 7.0.0 h966b41f_5 conda-forge prometheus_client 0.8.0 pyh9f0ad1d_0 conda-forge prompt-toolkit 3.0.5 py_1 conda-forge psutil 5.7.2 py37h8f50634_0 conda-forge pthread-stubs 0.4 h14c3975_1001 conda-forge ptyprocess 0.6.0 py_1001 conda-forge py 1.9.0 pypi_0 pypi pyarrow 0.17.1 py37h1234567_11_cpu conda-forge pybtex 0.22.2 pypi_0 pypi pybtex-docutils 0.2.2 pypi_0 pypi pycosat 0.6.3 py37h8f50634_1004 conda-forge pycparser 2.20 pyh9f0ad1d_2 conda-forge pyct 0.4.6 py_0 pyviz pyct-core 0.4.6 py_0 pyviz pycurl 7.43.0.5 py37hce7685b_2 conda-forge pydata-sphinx-theme 0.3.1 pypi_0 pypi pygeoda 0.0.3 pypi_0 pypi pygeos 0.7.1 py37hc88ce51_0 conda-forge pygments 2.6.1 py_0 conda-forge pyjwt 1.7.1 py_0 conda-forge pyopenssl 19.1.0 py_1 conda-forge pyparsing 2.4.7 pyh9f0ad1d_0 conda-forge pyproj 2.6.1.post1 py37h34dd122_0 conda-forge pyrobuf 0.9.3 py37h3340039_0 conda-forge pyrosm 0.5.2 py37h3340039_0 conda-forge pyrsistent 0.16.0 py37h8f50634_0 conda-forge pysal 2.2.0 py_0 conda-forge pysocks 1.7.1 py37hc8dfbb8_1 conda-forge pytables 3.6.1 py37h56451d4_2 conda-forge pytest 5.4.3 pypi_0 pypi pytest-cov 2.10.0 pypi_0 pypi pytest-tornasync 0.6.0.post2 pypi_0 pypi python 3.7.6 cpython_h8356626_6 conda-forge python-dateutil 2.8.0 py_0 conda-forge python-editor 1.0.4 py_0 conda-forge python-json-logger 0.1.11 py_0 conda-forge python-levenshtein 0.12.0 py37h516909a_1001 conda-forge python-rapidjson 0.9.1 py37he1b5a44_0 conda-forge python_abi 3.7 1_cp37m pyviz pytz 2020.1 pyh9f0ad1d_0 conda-forge pywavelets 1.1.1 py37h03ebfcd_1 conda-forge pyyaml 5.3.1 py37h8f50634_0 conda-forge pyzmq 19.0.1 py37hac76be4_0 conda-forge qgrid 1.3.1 py37hc8dfbb8_0 conda-forge quantecon 0.4.8 py37hc8dfbb8_0 conda-forge rasterio 1.1.5 py37h0492a4a_0 conda-forge rasterstats 0.14.0 py_0 conda-forge re2 2020.07.06 he1b5a44_1 conda-forge readline 8.0 he28a2e2_2 conda-forge regex 2020.7.14 py37h8f50634_0 conda-forge requests 2.24.0 pyh9f0ad1d_0 conda-forge retrying 1.3.3 py_2 conda-forge rio-cogeo 1.1.10 py_0 conda-forge rioxarray 0.0.31 py_0 conda-forge rpy2 3.3.5 pypi_0 pypi rtree 0.9.4 py37h8526d28_1 conda-forge ruamel.yaml 0.16.6 py37h8f50634_1 conda-forge ruamel.yaml.clib 0.2.0 py37h8f50634_1 conda-forge ruamel_yaml 0.15.80 py37h8f50634_1001 conda-forge s3transfer 0.3.3 py37hc8dfbb8_1 conda-forge scikit-image 0.17.2 py37h0da4684_1 conda-forge scikit-learn 0.23.1 py37h8a51577_0 conda-forge scipy 1.5.1 py37ha3d9a3c_0 conda-forge seaborn 0.10.1 1 conda-forge seaborn-base 0.10.1 py_1 conda-forge segregation 1.3.0 py_0 conda-forge send2trash 1.5.0 py_0 conda-forge setuptools 49.2.0 py37hc8dfbb8_0 conda-forge shapely 1.7.0 py37hc88ce51_3 conda-forge simplejson 3.17.2 py37h8f50634_0 conda-forge six 1.15.0 pyh9f0ad1d_0 conda-forge smmap 3.0.4 pyh9f0ad1d_0 conda-forge smmap2 3.0.1 py_0 conda-forge snappy 1.1.8 he1b5a44_3 conda-forge snowballstemmer 2.0.0 pypi_0 pypi snuggs 1.4.7 py_0 conda-forge sortedcontainers 2.2.2 pyh9f0ad1d_0 conda-forge soupsieve 2.0.1 py37hc8dfbb8_0 conda-forge spaghetti 1.5.0 py_0 conda-forge spatialpandas 0.3.5 py_0 pyviz spglm 1.0.7 py_0 conda-forge sphinx 2.4.4 pypi_0 pypi sphinx-book-theme 0.0.31 pypi_0 pypi sphinx-copybutton 0.2.12 pypi_0 pypi sphinx-togglebutton 0.2.0 pypi_0 pypi sphinxcontrib-applehelp 1.0.2 pypi_0 pypi sphinxcontrib-bibtex 1.0.0 pypi_0 pypi sphinxcontrib-devhelp 1.0.2 pypi_0 pypi sphinxcontrib-htmlhelp 1.0.3 pypi_0 pypi sphinxcontrib-jsmath 1.0.1 pypi_0 pypi sphinxcontrib-qthelp 1.0.3 pypi_0 pypi sphinxcontrib-serializinghtml 1.1.4 pypi_0 pypi spint 1.0.6 py_0 conda-forge splot 1.1.3 py_0 conda-forge spreg 1.1.1 py_0 conda-forge spvcm 0.3.0 py_0 conda-forge sqlalchemy 1.3.18 py37h8f50634_0 conda-forge sqlite 3.32.3 hcee41ef_1 conda-forge statsmodels 0.11.1 py37h8f50634_2 conda-forge supermercado 0.1.1 pyh9f0ad1d_0 conda-forge sympy 1.6.1 py37hc8dfbb8_0 conda-forge tbb 2020.1 hc9558a2_0 conda-forge tblib 1.6.0 py_0 conda-forge terminado 0.8.3 py37hc8dfbb8_1 conda-forge testpath 0.4.4 py_0 conda-forge threadpoolctl 2.1.0 pyh5ca1d4c_0 conda-forge thrift-cpp 0.13.0 h62aa4f2_2 conda-forge tifffile 2020.7.17 py_0 conda-forge tiledb 1.7.7 h8efa9f0_3 conda-forge tini 0.18.0 h14c3975_1001 conda-forge tk 8.6.10 hed695b0_0 conda-forge tobler 0.3.1 py_0 conda-forge toml 0.10.1 pyh9f0ad1d_0 conda-forge toolz 0.10.0 py_0 conda-forge tornado 6.0.4 py37h8f50634_1 conda-forge tqdm 4.48.0 pyh9f0ad1d_0 conda-forge traitlets 4.3.3 py37hc8dfbb8_1 conda-forge traittypes 0.2.1 py_1 conda-forge typed-ast 1.4.1 py37h516909a_0 conda-forge typing_extensions 3.7.4.2 py_0 conda-forge tzcode 2020a h516909a_0 conda-forge tzlocal 2.1 pyh9f0ad1d_0 conda-forge urllib3 1.24.3 py37_0 conda-forge wcwidth 0.2.5 pyh9f0ad1d_0 conda-forge webencodings 0.5.1 py_1 conda-forge wheel 0.34.2 py_1 conda-forge widgetsnbextension 3.5.1 py37hc8dfbb8_1 conda-forge xarray 0.16.0 py_0 conda-forge xarray-spatial 0.0.6 py37_0 makepath xarray_leaflet 0.1.10 pyh9f0ad1d_0 conda-forge xerces-c 3.2.2 h8412b87_1004 conda-forge xlrd 1.2.0 py_0 conda-forge xlsxwriter 1.2.9 pyh9f0ad1d_0 conda-forge xorg-kbproto 1.0.7 h14c3975_1002 conda-forge xorg-libice 1.0.10 h516909a_0 conda-forge xorg-libsm 1.2.3 h84519dc_1000 conda-forge xorg-libx11 1.6.9 h516909a_0 conda-forge xorg-libxau 1.0.9 h14c3975_0 conda-forge xorg-libxdmcp 1.1.3 h516909a_0 conda-forge xorg-libxext 1.3.4 h516909a_0 conda-forge xorg-libxrender 0.9.10 h516909a_1002 conda-forge xorg-renderproto 0.11.1 h14c3975_1002 conda-forge xorg-xextproto 7.3.0 h14c3975_1002 conda-forge xorg-xproto 7.0.31 h14c3975_1007 conda-forge xz 5.2.5 h516909a_1 conda-forge yaml 0.2.5 h516909a_0 conda-forge zeromq 4.3.2 he1b5a44_2 conda-forge zfp 0.5.5 he1b5a44_1 conda-forge zict 2.0.0 py_0 conda-forge zipp 3.1.0 py_0 conda-forge zlib 1.2.11 h516909a_1006 conda-forge zstd 1.4.5 h6597ccf_1 conda-forge . ",
    "url": "https://darribas.org/gds_env/stacks/gds_py/#python-libraries",
    "relUrl": "/stacks/gds_py/#python-libraries"
  },"23": {
    "doc": "gds_py",
    "title": "Install",
    "content": "The Docker image can be downloaded with the following command: . docker pull darribas/gds_py:4.1 . ",
    "url": "https://darribas.org/gds_env/stacks/gds_py/#install",
    "relUrl": "/stacks/gds_py/#install"
  },"24": {
    "doc": "gds_py",
    "title": "gds_py",
    "content": " ",
    "url": "https://darribas.org/gds_env/stacks/gds_py/",
    "relUrl": "/stacks/gds_py/"
  },"25": {
    "doc": "Guides",
    "title": "Guides",
    "content": "This section illustrates how to build, install and deploy the gds_env in a variety of contexts. At the core of all of them are the images described in Stacks, and each can be deployed through these delivery channels. Currently, two approaches are supported: Docker and Virtualbox. If available, the recommended way is through Docker, which is a more lightweight solution and can be more efficient and scalable. However, Docker is not always an option (e.g. some versions of Windows or systems for users without administrative rights). For these cases, a more widely available option is a full-fledge virtual machine such as VirtualBox. The guides cover two different user scenarios: build and install. Install guides are geared towards end users who want to run the one of the gds_env flavours on their machine; build guides are designed to document the process used to create available images and hence will probably be more useful for more advanced users or administrators (e.g. lecturers)who want to prepare a new image for deployment. ",
    "url": "https://darribas.org/gds_env/guides/",
    "relUrl": "/guides/"
  },"26": {
    "doc": "Home",
    "title": "A containerised platform for Geographic Data Science: gds_env",
    "content": ". | Dani Arribas-Bel [@darribas] | . The gds_env (short for “GDS environment”) provides a modern platform for Geographic Data Science. The project is a Jupyter-based stack that includes state-of-the-art geospatial libraries for Python and R. The gds_env is based on container technology to make it a transferrable platform for reproducibility. The source code is released under an open source license and the build process is transparent. The gds_env extends the official Jupyter Docker Stack to include geospatial functionality in both Python and R. To offer more flexibility, this extension is provided in three different flavours, or stacks (to ): gds_py, gds and gds_dev. Each of them builds on each other and adds further functionality. Please check the Stacks section for more information. The goal of the gds_env is to make using Python and R for geospatial easy to set up in a large variety of contexts. The gds_env can support research and teaching activities, but is also suitable for data scientists using Python and R “in the field”. The stacks can be used in a range of environments, including: Windows/Mac/Linux laptops and desktops, servers, compute clusters, supercomputers or in the cloud (e.g. you can deploy them on Binder). For more information on how to build or install any of the stacks, check the Guides section. ",
    "url": "https://darribas.org/gds_env/#a-containerised-platform-for-geographic-data-science-gds_env",
    "relUrl": "/#a-containerised-platform-for-geographic-data-science-gds_env"
  },"27": {
    "doc": "Home",
    "title": "Community",
    "content": "The gds_env is an open-source project. To join the conversation, please read through its community guidelines. ",
    "url": "https://darribas.org/gds_env/#community",
    "relUrl": "/#community"
  },"28": {
    "doc": "Home",
    "title": "Citation",
    "content": ". @software{gds_env, author = , title = {\\texttt{gds\\_env}: A containerised platform for Geographic Data Science}, url = {https://github.com/darribas/gds_env}, version = {4.1}, date = {2019-08-06}, } . ",
    "url": "https://darribas.org/gds_env/#citation",
    "relUrl": "/#citation"
  },"29": {
    "doc": "Home",
    "title": "License",
    "content": "The code to generate the gds_env stacks is released under a BSD License. More details available on the repository’s license document. ",
    "url": "https://darribas.org/gds_env/#license",
    "relUrl": "/#license"
  },"30": {
    "doc": "Home",
    "title": "Home",
    "content": " ",
    "url": "https://darribas.org/gds_env/",
    "relUrl": "/"
  },"31": {
    "doc": "Stacks",
    "title": "Stacks",
    "content": "The gds_env provides a Jupyter-based platform to run Python and R geospatial packages in a way that can be installed in a variety of contexts. To provide more flexibility and better cater to the needs of different users, this overall functionality is stratified in three different flavours, or stacks: gds_py, gds and gds_dev. All of the stacks are based on Jupyter Lab/Notebook/Hub and on Docker. The main difference is the overall functionality they provide (and the subsequent size of each image). The three stacks are layered on top of each other: . | gds_py: Jupyter minimal-notebook (Jupyter Lab/Notebook/Hub + LaTeX) + Python geospatial libraries (see full list) | gds: gds_py + R geospatial libraries (see full list) + IRkernel + rpy2 | gds_dev: gds + development tools (decktape, jekyll, tippecanoe) | . For further details, be sure to check the page of each stack. ",
    "url": "https://darribas.org/gds_env/stacks/",
    "relUrl": "/stacks/"
  },"32": {
    "doc": "Vagrant - Build",
    "title": "Build and run with Vagrant",
    "content": "In this document, you will learn to create a VirtualBox VM that runs the gds_env container using vagrant. ",
    "url": "https://darribas.org/gds_env/guides/vagrant_build/#build-and-run-with-vagrant",
    "relUrl": "/guides/vagrant_build/#build-and-run-with-vagrant"
  },"33": {
    "doc": "Vagrant - Build",
    "title": "Requirements",
    "content": "This approach does not require Docker installed on the host machine, but the following needs to be installed and available: . | VirtualBox | vagrant | The Vagrantfile for this project, available to download here. | . Once the VM is created, only VirtualBox is required to run it. ",
    "url": "https://darribas.org/gds_env/guides/vagrant_build/#requirements",
    "relUrl": "/guides/vagrant_build/#requirements"
  },"34": {
    "doc": "Vagrant - Build",
    "title": "Provision VirtualBox image",
    "content": "To provision a VM that runs Docker and the gds_env image on startup, automatically, navigate to the folder with the Vagrantfile: . cd path/to/my/folder . And run: . vagrant up . The first time you run this on a machine, it will take a long time and will require a good internet connection as it has to download all the components of the Docker image, as well as a lightweight layer to make it run on VirtualBox. When completed, you should be able to point your browser to localhost:8888 and JupyterLab should be running. Once built, you can export the VM into an .ova file for transport. Before that, make sure the VM is not running: . vagrant halt . And then export with the following command: . vboxmanage export \"GDS Box\" -o gds_4p1_vagrant.ova . This might take a while but will result on a compressed single file that can be imported by VirtualBox on a different machine. ",
    "url": "https://darribas.org/gds_env/guides/vagrant_build/#provision-virtualbox-image",
    "relUrl": "/guides/vagrant_build/#provision-virtualbox-image"
  },"35": {
    "doc": "Vagrant - Build",
    "title": "Run VM through vagrant + VirtualBox",
    "content": "Once built, every time you want to start the VM again, you need to navigate to the folder where you keep the Vagrantfile: . cd path/to/my/folder . And run: . vagrant up . If the VM is built, booting up should only take a few seconds, one or two minutes at the most depending on hardware. Once ready, you should be able to point your browser to localhost:8888 and JupyterLab should be running. Password . To login to the JupyterLab instance you will need the password geods. File sharing . By default, the folder where you keep the Vagrantfile and where you run vagrant up from is mounted under /home/jovyan/work in the container. This means that, when you access JupyterLab, the work folder that appears on the left-hand side is a “window” into the folder in the host where you start the VM from. NOTE: you can access all the files and folders within the folder from which you start the session, but you cannot move outside such location. Shutting down . Once you are done with your work and want to stop JupyterLab, you can run: . vagrant halt . ",
    "url": "https://darribas.org/gds_env/guides/vagrant_build/#run-vm-through-vagrant--virtualbox",
    "relUrl": "/guides/vagrant_build/#run-vm-through-vagrant--virtualbox"
  },"36": {
    "doc": "Vagrant - Build",
    "title": "Vagrant - Build",
    "content": " ",
    "url": "https://darribas.org/gds_env/guides/vagrant_build/",
    "relUrl": "/guides/vagrant_build/"
  },"37": {
    "doc": "Virtualbox - Build",
    "title": "Build a VirtualBox VM",
    "content": "This document covers the following two steps: . | Provisioning: how to create a VirtualBox VM that runs the gds_env container | Deployment: import a generated .ova file into VirtualBox | . NOTE: this document relies heavily on this blog post. ",
    "url": "https://darribas.org/gds_env/guides/virtualbox_build/#build-a-virtualbox-vm",
    "relUrl": "/guides/virtualbox_build/#build-a-virtualbox-vm"
  },"38": {
    "doc": "Virtualbox - Build",
    "title": "Provision a VM",
    "content": "Requirements . This approach requires the following to be installed on the machine that will provision the VM: . | VirtualBox | docker | docker-machine | This cloud-config.yml file | . Create a VM . We will set up a VM that runs RancherOS. Following their own docs: . docker-machine create -d virtualbox \\ --virtualbox-boot2docker-url https://releases.rancher.com/os/latest/rancheros.iso \\ --virtualbox-memory 2048 \\ gdsbox . This will create a VirtualBox VM that you can check with VBoxManage: . VBoxManage list vms . You should be able to see something similar to: . \"gdsbox\" {cb546670-3388-461d-8f0f-87ce352e9134} . To set the environment of your shell to that machine: . docker-machine env gdsbox . will display the command to run for that. Keep in mind that that exports environment variables, so if you want to go back to the original, you can: . eval $(docker-machine env gdsbox) . If you want to reset them: . eval $(docker-machine env -u) . Provision it . Now there is a VM, we need to “fill” it with gds_env container. | From the same shell with the gdsbox env activated, we can go ahead and provision the desired container: | . docker pull darribas/gds_&lt;flavour&gt;:&lt;version&gt; . | Now we need to “enter” the VM to add a few extra bits and pieces: | . docker-machine ssh gdsbox -t . | Add autostart of the container. To do this, you will need to add the content of the cloud-config.ymlto the VM cloud-config: | . sudo vi /var/lib/rancher/conf/cloud-config.yml . | Enable and start the VirtualBox tools to make it easy to share folders: | . sudo ros service enable virtualbox-tools sudo ros service up virtualbox-tools . | Leave the inside of the VM: | . exit . Export provisioned VM into .ova . Once the VM is built and provisioned, we can write it into an appliance file. First we need to stop the running VM: . docker-machine stop gdsbox . Then we can export: . VBoxManage export gdsbox --iso -o &lt;file-name&gt;.ova . ",
    "url": "https://darribas.org/gds_env/guides/virtualbox_build/#provision-a-vm",
    "relUrl": "/guides/virtualbox_build/#provision-a-vm"
  },"39": {
    "doc": "Virtualbox - Build",
    "title": "Deployment",
    "content": "For a guide on importing the .ova export and running the resulting VM, please check here. ",
    "url": "https://darribas.org/gds_env/guides/virtualbox_build/#deployment",
    "relUrl": "/guides/virtualbox_build/#deployment"
  },"40": {
    "doc": "Virtualbox - Build",
    "title": "Virtualbox - Build",
    "content": " ",
    "url": "https://darribas.org/gds_env/guides/virtualbox_build/",
    "relUrl": "/guides/virtualbox_build/"
  },"41": {
    "doc": "Virtualbox - Install",
    "title": "Install on VirtualBox",
    "content": "This document details the requirements and steps needed to be able to run the gds_env as a virtual machine (VM) on VirtualBox. ",
    "url": "https://darribas.org/gds_env/guides/virtualbox_install/#install-on-virtualbox",
    "relUrl": "/guides/virtualbox_install/#install-on-virtualbox"
  },"42": {
    "doc": "Virtualbox - Install",
    "title": "Requirements",
    "content": "This tutorial assumes the following is available before start: . | VirtualBox downloaded and installed | A copy of an .ova file containing the GDS image. This online folder contains available files. Please note this is a large file so download will take a while and will require a good internet connection | . ",
    "url": "https://darribas.org/gds_env/guides/virtualbox_install/#requirements",
    "relUrl": "/guides/virtualbox_install/#requirements"
  },"43": {
    "doc": "Virtualbox - Install",
    "title": "Installation",
    "content": "There are three main steps to follow: . | Import the appliance (.ova file) | Forward the required port to the host | Set up a shared folder so the VM can see files in your host machine | . Mac users, please check the section on known issues. It’s important to note these three steps are required to run only once, when setting the VM up in a machine for the first time. Once ready, launching and running the VM is a one-click job. Appliance import . | Go to “File –&gt; Import Appliance…” | Select the .ova file you have downloaded. The import process might take a couple of minutes, but you do not have to do anything | . Port forwarding . The VM will be accessed through your browser. To be able to connect from the host, the port 8888 needs to be able to reach the VM. Here is how you can do it: . | Right click on the gdsbox image and then left-click on “Settings” | Go to the “Network” tab and click on “Advanced” | Click on “Port Forwarding”, this will open up a new dialog window | On the right side, click on “Add new port” button, the one with a + sign. If you hover your mouse over, it will read “Adds new port fordwarding rule”. This will add a new row in the table | In the new row, type “jupyter” under “Name”, leave “Protocol”, “Host IP” and “Guest IP” as they are, and enter 8888 under both “Host Port” and “Guest Port”. | Then click OK on the bottom right part of the dialog window | . Folder sharing . The following steps allow you to select a folder on the host that will be accessible from the VM. | Right click on the gdsbox image and left-click on “Settings” | Go to the “Shared Folders” tab | Click on the button that has a folder with a + sign icon. If you hover your mouse it will read “Add new shared folder” in the top right | Click on “Folder Path” and select “Other” from the folder path dropdown | Point to the folder you want to share with the VM | Use “rancheros” under the “Folder Name” box | Leave “Mount point” blank and make sure “Auto-mount” and “Read-only” are not checked | . Mac known issues . If you are going over this process on a modern Mac, you will need to allow VirtualBox access rights when it requests them. Additionally, you might encounter the following error when importing the appliance: . Nonexistent host networking interface, name '' (VERR_INTERNAL_ERROR). Result Code: NS_ERROR_FAILURE (0x80004005) Component: ConsoleWrap Interface: IConsole {872da645-4a9b-1727-bee2-5585105b9eed} . This has to do with security settings of macOS. To work around the issue, follow these steps: . | From the main menu, select “File &gt; Host Network Manager”. You should see an empty white box with “Host-only Networks”. | Click the “Create” button. A new Host-only network will be created and added to the list automatically. | . ",
    "url": "https://darribas.org/gds_env/guides/virtualbox_install/#installation",
    "relUrl": "/guides/virtualbox_install/#installation"
  },"44": {
    "doc": "Virtualbox - Install",
    "title": "Running the VM",
    "content": "Once the steps above are followed, you are good to go. To start a session, follow these steps: . | Select gdsbox on the VirtualBox window | On the top row, click on “Start” | A new window will launch with a black console that will start printing output out. This should continue for about 30 seconds, depending on your laptop | When it stops, you should see a Texas longhorn drawn on the console. Everything is ready. | Open a browser (Firefox or Chrome preferably) and point it at localhost:8888 | A page will load, asking you to enter a password. Use geods. | The main JupyterLab interface should load, happy hacking! | . Shared files . The file menu on the left side of JupyterLab should display a single folder named work. This is the bridge to the host. If you double click on it, it will display the files in the folder you have decided to share with VirtualBox. ",
    "url": "https://darribas.org/gds_env/guides/virtualbox_install/#running-the-vm",
    "relUrl": "/guides/virtualbox_install/#running-the-vm"
  },"45": {
    "doc": "Virtualbox - Install",
    "title": "Virtualbox - Install",
    "content": " ",
    "url": "https://darribas.org/gds_env/guides/virtualbox_install/",
    "relUrl": "/guides/virtualbox_install/"
  }
}
